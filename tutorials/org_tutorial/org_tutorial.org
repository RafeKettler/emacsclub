#+TITLE:     Org-mode Tutorial / Cheat Sheet
#+AUTHOR:    Mishal Awadah
#+EMAIL:     emish@seas.upenn.edu
#+DATE:      2012-02-01 Wed
#+DESCRIPTION: 
#+KEYWORDS: 
#+STYLE:    <link rel="stylesheet" type="text/css" href="css/stylesheet.css" />
#+OPTIONS: H:2 num:nil

#+begin_center
Common tasks in org-mode
#+end_center

* Headings
  Headings such as this are created with '*'. The number of stars defines 
  the depth of the heading. Pressing Tab on headings will minimize/maximize 
  them. Pressing tab multiple times in a row on headings with subheadings will
  maximize each subheading by depth corresponding to the number of times 
  you pressed <TAB>.
  
** Subheadings
   This is an example of a subheading.

* "TODO"s 
  TODO's are created by starting headings with the keyword TODO or DONE. 
  They are meant to represent tasks you wish to create within your 
  organizational document. These can be helpful when planning out projects
  or assignments. 

** TODO Example 
** DONE Example
** The TODO cycle (~C-c C-t~)
   You can
   turn an existing header into a TODO item by cycling its TODO status. The 
   shortcut for this is ~C-c C-t~ (t for todo). 

   #+begin_quote
   Non-TODO -> TODO -> DONE -> Non-TODO ... (with ~C-c C-t~).
   #+end_quote
   
* Bullets and numbered lists
  You can create bullets with the - (dash), numbered bullets or lists with
  #. (number[dot]). Tabbing multiple times changes the indentation of the bullet,
  but only if there is no text yet.  Tabbing multiple levels can get
  confusing, but if you remember to <TAB> before typing '-' or '#.', things
  tend to work out. 

** Numbered example
  1. item 1
  2. item 2 
	  1. sub 1
	  2. sub 2
		 1. subsub 1

** Unnumbered example
 - hello
 - item 2
 - item 3
	 - subitem 1
	 - sub
		 - subsub

* Text Formatting
  Individual words can be *bolded* with stars, /italicized/ with forward
  slashes, and _underlined_ with underscores. Also, there is 
  ~verbatim~ and +strike-through+. 

  #+begin_example
  *bold* /italics/ _underline_ ~verbatim~ +strike-through+
  #+end_example

* Tables
  Tables can be created from any line that starts with '~|~' (pipe). 
  A line that starts with '~|-~' (pipe dash) is considered a horizontal 
  seperator; ~<TAB>~ after inserting it to expand the separator.
  
  Some tips: 
	  - ~<TAB>~ realigns the columns, and moves to the next column. 
		If at end of line, it will create a new row. 
	  - ~C-c C-c~ will realign the columns without moving or creating new ones.
	  - ~<RET>~ moves to the next row. 
** Example

   | hello | my    | name | is    | Mish |
   |-------+-------+------+-------+------|
   | move  | from  | one  | col   | to   |
   | the   | other | with | <TAB> |      | 

* Literal Examples
  Literal examples are snippets of text or source code that need to be 
  unformatted on org export.
** Source Code
   Org-mode is great for inserting snippets of code. This can be done with the
   
   #+begin_example
   #+BEGIN_SRC major-mode-name [options]
   enter your code in between these two
   #+END_SRC
   #+end_example
   
*** Useful options and commands.

	Options: 
	- ~-n~ : add line numbers to the source code.
	- ~+n~ : add line numbers but continue from last SRC snippet.
	- ~-r~ : remove labels from source code
	
	Commands: 
	- ~C-c [']~ : Allows you to edit the source code at point in its native mode. 
	  Opens a new buffer where you exit after editing by the command again. 
	- ~C-c l~ : calls org-store-link when editing with ~C-c '~. This creates 
	  a label at the line currently being edited. It can be retrieved 
	  later with ~C-c C-l~. 
	
** Easy templates
   These are shortcuts to generate the above snippet borders. To insert, 
   type a '<' followed by a template selector and then <TAB>. 

   Template selectors: 
   #+begin_example
   s	#+begin_src ... #+end_src 
   e	#+begin_example ... #+end_example
   q	#+begin_quote ... #+end_quote 
   v	#+begin_verse ... #+end_verse 
   c	#+begin_center ... #+end_center 
   l	#+begin_latex ... #+end_latex 
   L	#+latex: 
   h	#+begin_html ... #+end_html 
   H	#+html: 
   a	#+begin_ascii ... #+end_ascii 
   A	#+ascii: 
   i	#+index: line 
   I	#+include: line 
   #+end_example

* Including Files 
  You can include files in an org document, which will be rendered on export.
  This is done using the single line command
  
  #+begin_example
  #+INCLUDE: "file-path" [type] [src-language]
  #+end_example

  type can be either (quote, example, or src). 
  if type is src, then src-language can be any major-mode language.
  
* Exporting (~C-c C-e~)
  You can export org files to any of the supported formats with 
  ~C-c C-e [option]~. 
  
  ~C-c C-e~ will show you the options available in a separate buffer. Common 
  ones are text, html, and latex. You can get PDFs by converting to latex, but
  you need to have a LaTeX environment installed on your system to use this.
** Common Export Variables
   When org files are exported, certain variables are set automatically but
   can be manually set by you. To change a variable's value, use 
   #+begin_example
   #+VARIABLE-NAME: value
   #+end_example
   anywhere in your document. At the top is probably best. 
   
   To paste a list of all export options in your 
   org document so that you can set them, use 
   (org-insert-export-options-template), or ~C-c C-e t~. 

   This will print
   
   #+begin_example	
	#+TITLE:       the title to be shown (default is the buffer name)
	#+AUTHOR:      the author (default taken from user-full-name)
	#+DATE:        a date, an Org timestamp120, or a format string for format-time-string
	#+EMAIL:       his/her email address (default from user-mail-address)
	#+DESCRIPTION: the page description, e.g. for the XHTML meta tag
	#+KEYWORDS:    the page keywords, e.g. for the XHTML meta tag
	#+LANGUAGE:    language for HTML, e.g. ‘en’ (org-export-default-language)
	#+TEXT:        Some descriptive text to be inserted at the beginning.
	#+TEXT:        Several lines may be given.
	#+OPTIONS:     H:2 num:t toc:t \n:nil @:t ::t |:t ^:t f:t TeX:t ...
	#+BIND:        lisp-var lisp-val, e.g.: org-export-latex-low-levels itemize
				   You need to confirm using these, or configure org-export-allow-BIND
	#+LINK_UP:     the ``up'' link of an exported page
	#+LINK_HOME:   the ``home'' link of an exported page
	#+LATEX_HEADER: extra line(s) for the LaTeX header, like \usepackage{xyz}
	#+EXPORT_SELECT_TAGS:   Tags that select a tree for export
	#+EXPORT_EXCLUDE_TAGS:  Tags that exclude a tree from export
	#+XSLT:        the XSLT stylesheet used by DocBook exporter to generate FO file
   #+end_example

   but with your actual variable values instead of descriptions. Change any of 
   the variables to the value of your choice. These descriptions
   are provided here for your reference. 

*** Title
	The title is taken from the first non-comment line in the file. If there is
	none, ie your file starts with a heading, it uses the filename. 
	The title can be manually set using
	
	#+begin_example
	#+TITLE: This is the title of the document
	#+end_example
	
*** Table of Contents
	Normally inserted after the first headline, you can set manually by
	inserting ~TABLE-OF-CONTENTS~ inside square-brackets ([]) seperately on 
	a line.
	
	Some useful options are: 
	#+begin_example
	#+OPTIONS: toc:2          (only to two levels in TOC)
	#+OPTIONS: toc:nil        (no TOC at all)
	#+end_example

   

   

** HTML Export 
*** Stylesheet
	
	You can include a stylesheet by using

	#+begin_example
	#+STYLE:    <link rel="stylesheet" type="text/css" href="../stylesheet.css" />
	#+end_example

	The styles used by org-mode to export specific parts of your document
	can be set in your stylesheet with the following variables: 

	#+begin_example
	p.author            author information, including email
	p.date              publishing date
	p.creator           creator info, about org mode version
	.title              document title
	.todo               TODO keywords, all not-done states
	.done               the DONE keywords, all states that count as done
	.WAITING            each TODO keyword also uses a class named after itself
	.timestamp          timestamp
	.timestamp-kwd      keyword associated with a timestamp, like SCHEDULED
	.timestamp-wrapper  span around keyword plus timestamp
	.tag                tag in a headline
	._HOME              each tag uses itself as a class, "@" replaced by "_"
	.target             target for links
	.linenr             the line number in a code example
	.code-highlighted   for highlighting referenced code lines
	div.outline-N       div for outline level N (headline plus text))
	div.outline-text-N  extra div for text at outline level N
	.section-number-N   section number in headlines, different for each level
	div.figure          how to format an inlined image
	pre.src             formatted source code
	pre.example         normal example
	p.verse             verse paragraph
	div.footnotes       footnote section headline
	p.footnote          footnote definition paragraph, containing a footnote
	.footref            a footnote reference number (always a <sup>)
	.footnum            footnote number in footnote definition (always <sup>)
	#+end_example

*** Table Formatting
  When exporting, tables are drawn without cell borders or frames. Here are 
  useful table formatting commands which you place immediately before a table.
  
  #+begin_example
  #+CAPTION: This is a table with lines around and between cells
  #+ATTR_HTML: border="2" rules="all" frame="border"
  #+end_example
